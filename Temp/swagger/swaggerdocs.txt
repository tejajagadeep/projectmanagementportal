{
  "openapi": "3.0.1",
  "info": {
    "title": "Project Management Portal Application",
    "description": "This is the Swagger UI for Project Management Portal Spring Boot Application.",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:8093/project-management",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/api/v1.0/story/storyId/{storyId}": {
      "get": {
        "tags": [
          "story-controller"
        ],
        "summary": "Retrieve Story",
        "description": "fetch a story details by story Id from the data base.",
        "operationId": "getStoryById",
        "parameters": [
          {
            "name": "storyId",
            "in": "path",
            "description": "Enter Story Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Story"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      },
      "put": {
        "tags": [
          "story-controller"
        ],
        "summary": "Update Story",
        "description": "fetch the details of a story by story Id and update the story and save it to the database.",
        "operationId": "updateStoryByIdAdmin",
        "parameters": [
          {
            "name": "storyId",
            "in": "path",
            "description": "Enter Story Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Enter Story Details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Story"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Story"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      },
      "delete": {
        "tags": [
          "story-controller"
        ],
        "summary": "Delete Story",
        "description": "Delete a story by story Id. Access by only Admin.",
        "operationId": "deleteStoryById",
        "parameters": [
          {
            "name": "storyId",
            "in": "path",
            "description": "Enter Story Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Story"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    },
    "/api/v1.0/story/storyAssignAdmin/{projectId}/story/{storyId}": {
      "put": {
        "tags": [
          "story-controller"
        ],
        "summary": "Foreign key Story",
        "description": "assigning the story to a project. Making the project Id as a foreign key. Access by only admin.",
        "operationId": "assign",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Enter Project Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "storyId",
            "in": "path",
            "description": "Enter Story Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    },
    "/api/v1.0/story/assignStoryToUsers/{userName}/story/{storyId}": {
      "put": {
        "tags": [
          "story-controller"
        ],
        "summary": "Assign a Story to User.",
        "description": "Assigning a story to a user.",
        "operationId": "assignStoryToUsers",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "description": "Enter User Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "storyId",
            "in": "path",
            "description": "Enter Story Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    },
    "/api/v1.0/project/projectId/{projectId}": {
      "get": {
        "tags": [
          "project-controller"
        ],
        "summary": "Retrieve Project",
        "description": "Retrieve a Project details from the data base by project id.",
        "operationId": "getProjectById",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Enter Project Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      },
      "put": {
        "tags": [
          "project-controller"
        ],
        "summary": "Update Project",
        "description": "Update project details by project Id and save it into the data base. Access by only admin",
        "operationId": "updateProjectById",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Enter Project Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Enter Project Details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      },
      "delete": {
        "tags": [
          "project-controller"
        ],
        "summary": "Delete Project",
        "description": "Delete a project by project Id. Access by only admin.",
        "operationId": "deleteProjectById",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Enter Project Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Project"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    },
    "/api/v1.0/project/projectAssign/{userName}/project/{projectId}": {
      "put": {
        "tags": [
          "project-controller"
        ],
        "summary": "Assign Project",
        "description": "Assign a project to user. Access by only admin",
        "operationId": "assign_1",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "description": "Enter User Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Enter Project Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    },
    "/api/v1.0/project/assignProjectToUser/{userName}/project/{projectId}": {
      "put": {
        "tags": [
          "project-controller"
        ],
        "summary": "Assign Project to User",
        "description": "Assign project to user by fetching project Id and user Id. Access by admin.",
        "operationId": "assignProjectToUser",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "description": "Enter User Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Enter Project Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    },
    "/authenticate": {
      "post": {
        "tags": [
          "jwt-authentication-controller"
        ],
        "summary": "JWT Token Generation",
        "description": "Key in username and password to get JWT Token by which you can authorize other rest points.",
        "operationId": "createAuthenticationToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JwtRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/user/userSignUp": {
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "Sign up New User",
        "description": "User gives the user details which are stored in the database.",
        "operationId": "saveUser",
        "requestBody": {
          "description": "Enter User Details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/story": {
      "get": {
        "tags": [
          "story-controller"
        ],
        "summary": "Retrieve All Stories",
        "description": "Retrieve all the stories in the data base.",
        "operationId": "getAllStories",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Story"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      },
      "post": {
        "tags": [
          "story-controller"
        ],
        "summary": "Save Story",
        "description": "User gives story details which are story in the data base. Access by only ADMIN",
        "operationId": "saveStory",
        "requestBody": {
          "description": "Enter Story Details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Story"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Story"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    },
    "/api/v1.0/project": {
      "get": {
        "tags": [
          "project-controller"
        ],
        "summary": "Retrieve Projects",
        "description": "Retrieve All the Projects from the data base.",
        "operationId": "getAllProjects",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Project"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      },
      "post": {
        "tags": [
          "project-controller"
        ],
        "summary": "Save Project",
        "description": "Save project details into the data base. Access by only admin.",
        "operationId": "saveProject",
        "requestBody": {
          "description": "Enter Project Details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    },
    "/api/v1.0/user": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Retrieve Users",
        "description": "fetch all users from the database.",
        "operationId": "getAllUsers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    },
    "/api/v1.0/user/userName/{userName}": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Retrieve User",
        "description": "Takes in userId and Retrieves  single User details.",
        "operationId": "getByUserName",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "description": "User Id of the User",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "default": {
            "description": "200",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    },
    "/api/v1.0/user/name/{name}": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Retrieve User",
        "description": "Takes in name and Retrieves  single User details.",
        "operationId": "getUserByName",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "User name of the User",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "default": {
            "description": "200",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    },
    "/api/v1.0/project/status/{status}": {
      "get": {
        "tags": [
          "project-controller"
        ],
        "summary": "Retrieve Projects by Status",
        "description": "Retrieve All the Projects from the data base by status of the project.",
        "operationId": "getProjectsByStatus",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "description": "Enter Project Status.( 'To-Do', 'In-Progress', 'Ready-For-Test', 'Completed') ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Project"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    },
    "/api/v1.0/project/projectManagerName/{projectManagerName}": {
      "get": {
        "tags": [
          "project-controller"
        ],
        "summary": "Retrieve Projects by Project Manager.",
        "description": "Retrieve all Projects details from the data base by project manager name.",
        "operationId": "getProjectsByProjectManagerName",
        "parameters": [
          {
            "name": "projectManagerName",
            "in": "path",
            "description": "Enter Project Manager Name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Project"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "MessageResponse": {
        "type": "object",
        "properties": {
          "timeStamp": {
            "type": "string",
            "format": "date-time"
          },
          "message": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "100 CONTINUE",
              "101 SWITCHING_PROTOCOLS",
              "102 PROCESSING",
              "103 CHECKPOINT",
              "200 OK",
              "201 CREATED",
              "202 ACCEPTED",
              "203 NON_AUTHORITATIVE_INFORMATION",
              "204 NO_CONTENT",
              "205 RESET_CONTENT",
              "206 PARTIAL_CONTENT",
              "207 MULTI_STATUS",
              "208 ALREADY_REPORTED",
              "226 IM_USED",
              "300 MULTIPLE_CHOICES",
              "301 MOVED_PERMANENTLY",
              "302 FOUND",
              "302 MOVED_TEMPORARILY",
              "303 SEE_OTHER",
              "304 NOT_MODIFIED",
              "305 USE_PROXY",
              "307 TEMPORARY_REDIRECT",
              "308 PERMANENT_REDIRECT",
              "400 BAD_REQUEST",
              "401 UNAUTHORIZED",
              "402 PAYMENT_REQUIRED",
              "403 FORBIDDEN",
              "404 NOT_FOUND",
              "405 METHOD_NOT_ALLOWED",
              "406 NOT_ACCEPTABLE",
              "407 PROXY_AUTHENTICATION_REQUIRED",
              "408 REQUEST_TIMEOUT",
              "409 CONFLICT",
              "410 GONE",
              "411 LENGTH_REQUIRED",
              "412 PRECONDITION_FAILED",
              "413 PAYLOAD_TOO_LARGE",
              "413 REQUEST_ENTITY_TOO_LARGE",
              "414 URI_TOO_LONG",
              "414 REQUEST_URI_TOO_LONG",
              "415 UNSUPPORTED_MEDIA_TYPE",
              "416 REQUESTED_RANGE_NOT_SATISFIABLE",
              "417 EXPECTATION_FAILED",
              "418 I_AM_A_TEAPOT",
              "419 INSUFFICIENT_SPACE_ON_RESOURCE",
              "420 METHOD_FAILURE",
              "421 DESTINATION_LOCKED",
              "422 UNPROCESSABLE_ENTITY",
              "423 LOCKED",
              "424 FAILED_DEPENDENCY",
              "425 TOO_EARLY",
              "426 UPGRADE_REQUIRED",
              "428 PRECONDITION_REQUIRED",
              "429 TOO_MANY_REQUESTS",
              "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
              "451 UNAVAILABLE_FOR_LEGAL_REASONS",
              "500 INTERNAL_SERVER_ERROR",
              "501 NOT_IMPLEMENTED",
              "502 BAD_GATEWAY",
              "503 SERVICE_UNAVAILABLE",
              "504 GATEWAY_TIMEOUT",
              "505 HTTP_VERSION_NOT_SUPPORTED",
              "506 VARIANT_ALSO_NEGOTIATES",
              "507 INSUFFICIENT_STORAGE",
              "508 LOOP_DETECTED",
              "509 BANDWIDTH_LIMIT_EXCEEDED",
              "510 NOT_EXTENDED",
              "511 NETWORK_AUTHENTICATION_REQUIRED"
            ]
          }
        }
      },
      "Story": {
        "required": [
          "assignee",
          "assigneeEmailId",
          "assignmentDate",
          "status",
          "storyDescription",
          "storyTitle",
          "targetDate"
        ],
        "type": "object",
        "properties": {
          "storyId": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "projectIdName": {
            "type": "string"
          },
          "storyTitle": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "storyDescription": {
            "maxLength": 2147483647,
            "minLength": 100,
            "type": "string"
          },
          "assignee": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "assigneeEmailId": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "assignmentDate": {
            "type": "string",
            "format": "date-time"
          },
          "targetDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "remarks": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "storyAssignedToUsers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Project": {
        "required": [
          "projectDescription",
          "projectEndDate",
          "projectId",
          "projectManagerEmailId",
          "projectManagerName",
          "projectName",
          "projectStartDate",
          "remarks",
          "status",
          "teamName",
          "teamSize",
          "techLeadEmailId",
          "techLeadName",
          "techStack"
        ],
        "type": "object",
        "properties": {
          "projectId": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "projectName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "projectDescription": {
            "maxLength": 2147483647,
            "minLength": 100,
            "type": "string"
          },
          "teamName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "teamSize": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "projectManagerName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "projectManagerEmailId": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "techLeadName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "techLeadEmailId": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "projectStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "projectEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "techStack": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "status": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "remarks": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "projectOwner": {
            "type": "string"
          },
          "projectAssignedToUsers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "stories": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Story"
            }
          }
        }
      },
      "JwtRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "log": {
            "$ref": "#/components/schemas/Logger"
          }
        },
        "description": "Enter username and password"
      },
      "Logger": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "errorEnabled": {
            "type": "boolean"
          },
          "infoEnabled": {
            "type": "boolean"
          },
          "warnEnabled": {
            "type": "boolean"
          },
          "traceEnabled": {
            "type": "boolean"
          },
          "debugEnabled": {
            "type": "boolean"
          }
        }
      },
      "User": {
        "required": [
          "contactNo",
          "dateOfBirth",
          "emailAddress",
          "name",
          "password",
          "role"
        ],
        "type": "object",
        "properties": {
          "userName": {
            "maxLength": 8,
            "minLength": 5,
            "type": "string"
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "emailAddress": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "contactNo": {
            "type": "integer",
            "format": "int64"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time"
          },
          "role": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "password": {
            "maxLength": 2147483647,
            "minLength": 8,
            "pattern": "(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}",
            "type": "string"
          },
          "projects": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Project"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer Authentication": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}